(define (domain assign3)
   (:predicates  (room ?x) (ball ?x) (linked ?x ?y)(robot ?x)  (robot-at ?x)(ball-at ?x ?y) (contain ?w ?x) (free ?x) (empty ?x))
   (:action move-without-ball :parameters(?w ?x ?y)
                                :precondition(and (room ?x) (room ?y) (free ?w)(robot ?w) (robot-at ?x) (not (robot-at ?y))  (linked ?x ?y))
                                :effect(and (robot-at ?y) (not (robot-at ?x))))
   (:action pickup :parameters(?w ?x ?y)
                   :precondition(and (room ?y) (ball ?x) (ball-at ?x ?y) (robot ?w) (robot-at ?y)  (free ?w) (not (empty ?y)) (not (contain ?w ?x)))
                   :effect(and (empty ?y) (contain ?w ?x) (not (free ?w)) (not (ball-at ?x ?y)) )) 
   (:action move-with-ball :parameters(?w ?x ?y ?z)
                             :precondition(and (room ?y) (room ?z)(empty ?z) (robot ?w) (robot-at ?y) (not (robot-at ?z))(ball ?x)  (linked ?y ?z) 
                                          (not (free ?w))  (contain ?w ?x))
                             :effect(and (robot-at ?z) (not (robot-at ?y)))) 
   (:action release :parameters(?w ?x ?y)
                    :precondition(and (room ?y) (ball ?x) (empty ?y) (robot ?w) (robot-at ?y) (not (free ?w)) (contain ?w ?x) (not (ball-at ?x ?y)) )
                    :effect(and (free ?w) (not (empty ?y)) (ball-at ?x ?y) (not (contain ?w ?x)))))
